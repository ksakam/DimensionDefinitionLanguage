Terminals unused in grammar

   ERR


State 1 conflicts: 1 shift/reduce


文法

    0 $accept: line_list $end

    1 line_list: line
    2          | line_list line

    3 line: dimension_expression_ref END
    4     | dimension_expression END

    5 dimension_expression_ref: dimension_expression REF refs

    6 refs: ref
    7     | refs LIST ref

    8 ref: arg SET REF_S ALPH SET NUM REF_E
    9    | arg SET REF_S ALPH SET arg REF_E

   10 dimension_expression: arg
   11                     | list
   12                     | arg RULE arg
   13                     | arg RULE list
   14                     | list RULE arg
   15                     | list RULE list

   16 list: arg func_seq

   17 func_seq: func_b
   18         | func_seq func_b

   19 func_b: FUNC_S argm FUNC_E

   20 argm: args
   21     | args FUNC_S argm FUNC_E
   22     | args FUNC_S argm FUNC_E LIST argm

   23 args: arg
   24     | args LIST arg

   25 arg: ARGEX
   26    | ARGEX DIM
   27    | ARGEX FUNC_S FUNC_E


出現位置の規則による終端

$end (0) 0
error (256)
DIM (258) 26
ARGEX (259) 25 26 27
FUNC_S (260) 19 21 22 27
FUNC_E (261) 19 21 22 27
RULE (262) 12 13 14 15
LIST (263) 7 22 24
REF (264) 5
ALPH (265) 8 9
NUM (266) 8
REF_S (267) 8 9
REF_E (268) 8 9
SET (269) 8 9
END (270) 3 4
ERR (271)


出現位置の規則による非終端

$accept (17)
    左辺: 0
line_list (18)
    左辺: 1 2, 右辺: 0 2
line (19)
    左辺: 3 4, 右辺: 1 2
dimension_expression_ref (20)
    左辺: 5, 右辺: 3
refs (21)
    左辺: 6 7, 右辺: 5 7
ref (22)
    左辺: 8 9, 右辺: 6 7
dimension_expression (23)
    左辺: 10 11 12 13 14 15, 右辺: 4 5
list (24)
    左辺: 16, 右辺: 11 13 14 15
func_seq (25)
    左辺: 17 18, 右辺: 16 18
func_b (26)
    左辺: 19, 右辺: 17 18
argm (27)
    左辺: 20 21 22, 右辺: 19 21 22
args (28)
    左辺: 23 24, 右辺: 20 21 22 24
arg (29)
    左辺: 25 26 27, 右辺: 8 9 10 12 13 14 16 23 24


状態 0

    0 $accept: . line_list $end

    ARGEX  shift, and go to state 1

    line_list                 go to state 2
    line                      go to state 3
    dimension_expression_ref  go to state 4
    dimension_expression      go to state 5
    list                      go to state 6
    arg                       go to state 7


状態 1

   25 arg: ARGEX .
   26    | ARGEX . DIM
   27    | ARGEX . FUNC_S FUNC_E

    DIM     shift, and go to state 8
    FUNC_S  shift, and go to state 9

    FUNC_S    [reduce using rule 25 (arg)]
    $default  reduce using rule 25 (arg)


状態 2

    0 $accept: line_list . $end
    2 line_list: line_list . line

    $end   shift, and go to state 10
    ARGEX  shift, and go to state 1

    line                      go to state 11
    dimension_expression_ref  go to state 4
    dimension_expression      go to state 5
    list                      go to state 6
    arg                       go to state 7


状態 3

    1 line_list: line .

    $default  reduce using rule 1 (line_list)


状態 4

    3 line: dimension_expression_ref . END

    END  shift, and go to state 12


状態 5

    4 line: dimension_expression . END
    5 dimension_expression_ref: dimension_expression . REF refs

    REF  shift, and go to state 13
    END  shift, and go to state 14


状態 6

   11 dimension_expression: list .
   14                     | list . RULE arg
   15                     | list . RULE list

    RULE  shift, and go to state 15

    $default  reduce using rule 11 (dimension_expression)


状態 7

   10 dimension_expression: arg .
   12                     | arg . RULE arg
   13                     | arg . RULE list
   16 list: arg . func_seq

    FUNC_S  shift, and go to state 16
    RULE    shift, and go to state 17

    $default  reduce using rule 10 (dimension_expression)

    func_seq  go to state 18
    func_b    go to state 19


状態 8

   26 arg: ARGEX DIM .

    $default  reduce using rule 26 (arg)


状態 9

   27 arg: ARGEX FUNC_S . FUNC_E

    FUNC_E  shift, and go to state 20


状態 10

    0 $accept: line_list $end .

    $default  accept


状態 11

    2 line_list: line_list line .

    $default  reduce using rule 2 (line_list)


状態 12

    3 line: dimension_expression_ref END .

    $default  reduce using rule 3 (line)


状態 13

    5 dimension_expression_ref: dimension_expression REF . refs

    ARGEX  shift, and go to state 1

    refs  go to state 21
    ref   go to state 22
    arg   go to state 23


状態 14

    4 line: dimension_expression END .

    $default  reduce using rule 4 (line)


状態 15

   14 dimension_expression: list RULE . arg
   15                     | list RULE . list

    ARGEX  shift, and go to state 1

    list  go to state 24
    arg   go to state 25


状態 16

   19 func_b: FUNC_S . argm FUNC_E

    ARGEX  shift, and go to state 1

    argm  go to state 26
    args  go to state 27
    arg   go to state 28


状態 17

   12 dimension_expression: arg RULE . arg
   13                     | arg RULE . list

    ARGEX  shift, and go to state 1

    list  go to state 29
    arg   go to state 30


状態 18

   16 list: arg func_seq .
   18 func_seq: func_seq . func_b

    FUNC_S  shift, and go to state 16

    $default  reduce using rule 16 (list)

    func_b  go to state 31


状態 19

   17 func_seq: func_b .

    $default  reduce using rule 17 (func_seq)


状態 20

   27 arg: ARGEX FUNC_S FUNC_E .

    $default  reduce using rule 27 (arg)


状態 21

    5 dimension_expression_ref: dimension_expression REF refs .
    7 refs: refs . LIST ref

    LIST  shift, and go to state 32

    $default  reduce using rule 5 (dimension_expression_ref)


状態 22

    6 refs: ref .

    $default  reduce using rule 6 (refs)


状態 23

    8 ref: arg . SET REF_S ALPH SET NUM REF_E
    9    | arg . SET REF_S ALPH SET arg REF_E

    SET  shift, and go to state 33


状態 24

   15 dimension_expression: list RULE list .

    $default  reduce using rule 15 (dimension_expression)


状態 25

   14 dimension_expression: list RULE arg .
   16 list: arg . func_seq

    FUNC_S  shift, and go to state 16

    $default  reduce using rule 14 (dimension_expression)

    func_seq  go to state 18
    func_b    go to state 19


状態 26

   19 func_b: FUNC_S argm . FUNC_E

    FUNC_E  shift, and go to state 34


状態 27

   20 argm: args .
   21     | args . FUNC_S argm FUNC_E
   22     | args . FUNC_S argm FUNC_E LIST argm
   24 args: args . LIST arg

    FUNC_S  shift, and go to state 35
    LIST    shift, and go to state 36

    $default  reduce using rule 20 (argm)


状態 28

   23 args: arg .

    $default  reduce using rule 23 (args)


状態 29

   13 dimension_expression: arg RULE list .

    $default  reduce using rule 13 (dimension_expression)


状態 30

   12 dimension_expression: arg RULE arg .
   16 list: arg . func_seq

    FUNC_S  shift, and go to state 16

    $default  reduce using rule 12 (dimension_expression)

    func_seq  go to state 18
    func_b    go to state 19


状態 31

   18 func_seq: func_seq func_b .

    $default  reduce using rule 18 (func_seq)


状態 32

    7 refs: refs LIST . ref

    ARGEX  shift, and go to state 1

    ref  go to state 37
    arg  go to state 23


状態 33

    8 ref: arg SET . REF_S ALPH SET NUM REF_E
    9    | arg SET . REF_S ALPH SET arg REF_E

    REF_S  shift, and go to state 38


状態 34

   19 func_b: FUNC_S argm FUNC_E .

    $default  reduce using rule 19 (func_b)


状態 35

   21 argm: args FUNC_S . argm FUNC_E
   22     | args FUNC_S . argm FUNC_E LIST argm

    ARGEX  shift, and go to state 1

    argm  go to state 39
    args  go to state 27
    arg   go to state 28


状態 36

   24 args: args LIST . arg

    ARGEX  shift, and go to state 1

    arg  go to state 40


状態 37

    7 refs: refs LIST ref .

    $default  reduce using rule 7 (refs)


状態 38

    8 ref: arg SET REF_S . ALPH SET NUM REF_E
    9    | arg SET REF_S . ALPH SET arg REF_E

    ALPH  shift, and go to state 41


状態 39

   21 argm: args FUNC_S argm . FUNC_E
   22     | args FUNC_S argm . FUNC_E LIST argm

    FUNC_E  shift, and go to state 42


状態 40

   24 args: args LIST arg .

    $default  reduce using rule 24 (args)


状態 41

    8 ref: arg SET REF_S ALPH . SET NUM REF_E
    9    | arg SET REF_S ALPH . SET arg REF_E

    SET  shift, and go to state 43


状態 42

   21 argm: args FUNC_S argm FUNC_E .
   22     | args FUNC_S argm FUNC_E . LIST argm

    LIST  shift, and go to state 44

    $default  reduce using rule 21 (argm)


状態 43

    8 ref: arg SET REF_S ALPH SET . NUM REF_E
    9    | arg SET REF_S ALPH SET . arg REF_E

    ARGEX  shift, and go to state 1
    NUM    shift, and go to state 45

    arg  go to state 46


状態 44

   22 argm: args FUNC_S argm FUNC_E LIST . argm

    ARGEX  shift, and go to state 1

    argm  go to state 47
    args  go to state 27
    arg   go to state 28


状態 45

    8 ref: arg SET REF_S ALPH SET NUM . REF_E

    REF_E  shift, and go to state 48


状態 46

    9 ref: arg SET REF_S ALPH SET arg . REF_E

    REF_E  shift, and go to state 49


状態 47

   22 argm: args FUNC_S argm FUNC_E LIST argm .

    $default  reduce using rule 22 (argm)


状態 48

    8 ref: arg SET REF_S ALPH SET NUM REF_E .

    $default  reduce using rule 8 (ref)


状態 49

    9 ref: arg SET REF_S ALPH SET arg REF_E .

    $default  reduce using rule 9 (ref)
